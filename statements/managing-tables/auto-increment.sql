/*
In PostgreSQL, a sequence is a special kind of database object that generates a sequence of integers. A sequence is often used as the primary key column in a table. 
*/

-- When creating a new table, the sequence can be created through the SERIAL pseudo-type as follows:
create table if not exists table_name (
  id serial
);

/*
By assigning the SERIAL pseudo-type to the id column, postgres performs the following:
  • First, create a sequence object and set the next value generated by the sequence as the default value for the column.
  • Second, add a NOT NULL constraint to the id column because a sequence always generates an integer, which is non-null value.
  • Thrid, assign the owner ofthe sequence to the id column; as a result, the sequence object is deleted when the id column or table is dropped. 
*/
create table if not exists table_name (
  id serial
);

drop table if exists table_name;

-- is equivalent to the following statements:
create sequence table_name_id_seq;

create table table_name (
  id int not null default nextval('table_name_id_seq')
);

/*
Postgres provides three serial pseudo-types SMALLSERIAL, SERIAL, BIGSERIAL with the following characteristics:
 | Name            | Storage Size  | Range
 +-----------------+---------------+-------------------------------
 | SMALLSERIAL     | 2 bytes       | 1 to 32,767
 +-----------------+---------------+-------------------------------
 | SERIAL          | 4 bytes       | 1 to 2,147,483,647
 +-----------------+---------------+-------------------------------
 | BIGSERIAL       | 8 bytes       | 1 to 9,223,372,036,854,775,807
*/

-- The following statement creates the fruits table with the id column as the SERIAL column:
drop table if exists fruits;

create table fruits (
  id serial primary key,
  name varchar not null
);

insert into fruits (name)
values ('Orange');

-- or

insert into fruits (id, name)
values (default, 'Apple');

select * from fruits;

-- To get the sequence name of a SERIAL column in a table, you use the pg_get_serial_sequence() function as follows:
select pg_get_serial_sequence('fruits', 'id');

-- For example, the following statement returns the recent value generated by the fruits_id_seq object:
select currval(pg_get_serial_sequence('fruits', 'id'));

-- The following statement inserts a new row into the fruits table and returns the value generated for the id column.

insert into fruits (name)
values ('Banana')
returning id;

